---
title: "IDA"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(plotly)
library(rafalib)
```

```{r}
# read in the entries and exits data to get the type of stations
ee = read.csv("Data/TrainStationEntriesExits/train-station-entries-exits-data-may-2025.csv", header = TRUE)
```

distribution of Station_Type

```{r}
ggplot (ee, aes (x = Station_Type)) + geom_bar()
# 3 types: metro, Metro Shared, train
# reason to filter out metro: there's only entrance location data for train stations, not metro
```

distribution of MonthYear

```{r}
ggplot (ee, aes (x = MonthYear)) + geom_bar()
```

clean the data

```{r}
ee <- ee |>
  mutate(Train_Station = gsub(" Station", "", Station)) |>
  mutate(Train_Station = gsub(" $", "", Train_Station)) |>
  mutate(TripNumber = as.numeric(ifelse(Trip == "Less than 50", 50, Trip))) |>
  mutate(MonthYear=factor(MonthYear, levels=c("Aug-24", "Sep-24", "Oct-24", "Nov-24", "Dec-24", "Jan-25", "Feb-25", "Mar-25", "Apr-25", "May-25")))
  
# ee %>% mutate(MonthYear=factor(MonthYear, levels=MonthYear))

# not removing stations_to_ignore (since I don't really understand why they should be ignored)
```

distribution of TripNumber

```{r}
entry <- subset(ee, Entry_Exit == "Entry")
exit <- subset(ee, Entry_Exit == "Exit")

summary(ee$TripNumber)
summary(entry$TripNumber)
summary(exit$TripNumber)
sum(ee$TripNumber==50)

stations <- subset(entry, select = -c(Entry_Exit, TripNumber))
stations$TripDiff = (exit$TripNumber - entry$TripNumber) / entry$TripNumber

p = ggplot(ee, aes(x=TripNumber, group=1)) + geom_boxplot() + scale_y_continuous (limits = c(-0.4, 0.4))
p
ggplotly(p)

ggplot(entry, aes(x=TripNumber)) + geom_histogram()
ggplot(exit, aes(x=TripNumber)) + geom_histogram()
```

standard deviation of TripNumber of each station

```{r}
# sd <- data.frame(Station = unique(ee$Train_Station))
# sd$TripSD = popsd(subset(ee, ee$Train_Station==sd$Station)$TripNumber)

sd <- ee %>%
  group_by(Train_Station) %>%
  summarise(TripSD = popsd(TripNumber), TripMean = mean(TripNumber))

ggplotly(ggplot(sd, aes(x=TripSD)) + geom_histogram())
ggplotly(ggplot(sd, aes(x=TripSD)) + geom_boxplot() + scale_y_continuous (limits = c(-0.4, 0.4)))
```

visualise how the usage changes for Central Station

```{r}
centralEntry <- ee |>
  filter(Train_Station == "Central") |>
  filter(Entry_Exit == "Entry")

centralExit <- ee |>
  filter(Train_Station == "Central") |>
  filter(Entry_Exit == "Exit")

central <- subset(centralEntry, select = -c(Entry_Exit, TripNumber))
central$TripDiff = (centralExit$TripNumber - centralEntry$TripNumber) /   centralEntry$TripNumber

#centralEntry <- subset (ee, Train_Station == "Central", Entry_Exit = "Entry")
#centralExit <- subset (ee, Train_Station == "Central", Entry_Exit = "Exit")
ggplot(centralEntry, aes(x=MonthYear, y=TripNumber)) +
  geom_bar(stat = "identity")
ggplot(centralExit, aes(x=MonthYear, y=TripNumber)) +
  geom_bar(stat = "identity")
ggplot(central, aes(x=MonthYear, y=TripDiff)) +
  geom_bar(stat = "identity")
ggplot(central, aes(x=MonthYear, y=TripDiff, group = 1)) +
  geom_line()
```

how the usage changes for all stations

```{r}
#sortedSD <- sd %>%
#  mutate(Train_Station = fct_reorder(Train_Station, TripMean))

sortedSD <- sd[order(sd$TripMean, decreasing = TRUE), ]

entry1 <- entry |> filter(Train_Station %in% slice(sortedSD, 1:6)$Train_Station)
entry2 <- entry |> filter(Train_Station %in% slice(sortedSD, 7:26)$Train_Station)
entry3 <- entry |> filter(Train_Station %in% slice(sortedSD, 27:46)$Train_Station) # needs to split, dang trong hoi roi
entry4 <- entry |> filter(Train_Station %in% slice(sortedSD, 47:66)$Train_Station)
entry5 <- entry |> filter(Train_Station %in% slice(sortedSD, 67:86)$Train_Station)
entry6 <- entry |> filter(Train_Station %in% slice(sortedSD, 87:106)$Train_Station)
entry7 <- entry |> filter(Train_Station %in% slice(sortedSD, 107:126)$Train_Station & !Train_Station %in% c("Campsie", "Lakemba"))
entry8 <- entry |> filter(Train_Station %in% slice(sortedSD, 127:146)$Train_Station & !Train_Station %in% c("Marrickville", "Punchbowl"))
entry9 <- entry |> filter(Train_Station %in% slice(sortedSD, 147:166)$Train_Station & Train_Station != "Dulwich Hill")
entry10 <- entry |> filter(Train_Station %in% slice(sortedSD, 167:186)$Train_Station)
entry11 <- entry |> filter(Train_Station %in% slice(sortedSD, 187:206)$Train_Station)
entry12 <- entry |> filter(Train_Station %in% slice(sortedSD, 207:226)$Train_Station)
entry13 <- entry |> filter(Train_Station %in% slice(sortedSD, 227:246)$Train_Station)
entry14 <- entry |> filter(Train_Station %in% slice(sortedSD, 247:266)$Train_Station)
entry15 <- entry |> filter(Train_Station %in% slice(sortedSD, 267:286)$Train_Station)
entry16 <- entry |> filter(Train_Station %in% slice(sortedSD, 287:310)$Train_Station)
# skip 11 dong cuoi (only take until row #310)
# Ctrl Shift C
# ggplotly(ggplot(entry1, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#   geom_line())
# ggplotly(ggplot(entry2, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#   geom_line())
# ggplotly(ggplot(entry3, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#   geom_line())
# ggplotly(ggplot(entry4, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
# ggplotly(ggplot(entry5, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
# ggplotly(ggplot(entry6, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
# ggplotly(ggplot(entry7, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
# ggplotly(ggplot(entry8, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
# ggplotly(ggplot(entry9, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
#  geom_line())
ggplotly(ggplot(entry10, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry11, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry12, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry13, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry14, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry15, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
ggplotly(ggplot(entry16, aes(x=MonthYear, y=TripNumber, group=Train_Station, color=Train_Station)) +
  geom_line())
```

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).
